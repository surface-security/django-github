# Generated by Django 3.2.18 on 2023-04-16 11:16

from django.conf import settings
from django.db import migrations, models
from pathlib import Path
import django.db.models.deletion
import django.utils.timezone



class Migration(migrations.Migration):

    initial = True

    configurable_dependencies = getattr(settings, 'DJANGO_GITHUB_MIGRATIONS_DEPENDENCIES', {})
    dependencies = configurable_dependencies.get(
        Path(__file__).stem,
        [
            ('inventory', '0001_initial')
        ]
    )

    operations = [
        migrations.CreateModel(
            name='GithubIntegration',
            fields=[
                ('integration_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.integration')),
                ('app_id', models.CharField(blank=True, max_length=255)),
                ('app_installation_id', models.CharField(blank=True, max_length=255)),
                ('organisation', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Github Integration',
                'verbose_name_plural': 'Github Integrations',
            },
            bases=('inventory.integration',),
        ),
        migrations.CreateModel(
            name='SecretFinding',
            fields=[
                ('finding_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.finding')),
                ('number', models.IntegerField(editable=False)),
                ('url', models.URLField(blank=True, editable=False, null=True)),
                ('secret_type', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('secret', models.TextField(blank=True, editable=False, null=True)),
                ('resolution', models.CharField(blank=True, editable=False, max_length=255, null=True)),
                ('push_protection_bypassed', models.BooleanField(default=False, editable=False)),
                ('push_protection_comment', models.TextField(blank=True, editable=False, null=True)),
                ('repository', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='inventory.gitrepository')),
            ],
            options={
                'verbose_name': 'Github Secret Finding',
                'verbose_name_plural': 'Github Secret Findings',
            },
            bases=('inventory.finding',),
        ),
        migrations.CreateModel(
            name='GithubUser',
            fields=[
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(editable=False, max_length=128, null=True)),
                ('email', models.EmailField(editable=False, max_length=254, null=True)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('first_seen', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('integration', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='django_github.githubintegration')),
            ],
            options={
                'verbose_name': 'Github User',
                'verbose_name_plural': 'Github Users',
            },
        ),
        migrations.CreateModel(
            name='GithubTeam',
            fields=[
                ('id', models.CharField(editable=False, max_length=128, primary_key=True, serialize=False)),
                ('name', models.CharField(editable=False, max_length=128)),
                ('description', models.CharField(blank=True, editable=False, max_length=256, null=True)),
                ('active', models.BooleanField(default=True, editable=False)),
                ('first_seen', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('integration', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='django_github.githubintegration')),
                ('members', models.ManyToManyField(editable=False, to='django_github.GithubUser')),
            ],
            options={
                'verbose_name': 'Github Team',
                'verbose_name_plural': 'Github Teams',
            },
        ),
        migrations.CreateModel(
            name='GithubRepository',
            fields=[
                ('gitrepository_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.gitrepository')),
                ('owners', models.ManyToManyField(to='django_github.GithubUser')),
            ],
            options={
                'verbose_name': 'Github Repository',
                'verbose_name_plural': 'Github Repositories',
            },
            bases=('inventory.gitrepository',),
        ),
        migrations.CreateModel(
            name='DependencyFinding',
            fields=[
                ('finding_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.finding')),
                ('number', models.IntegerField(editable=False)),
                ('url', models.URLField(blank=True, editable=False, null=True)),
                ('dismissed_reason', models.TextField(blank=True, editable=False, null=True)),
                ('dismissed_comment', models.TextField(blank=True, editable=False, null=True)),
                ('identifiers', models.JSONField(editable=False, null=True)),
                ('repository', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='inventory.gitrepository')),
            ],
            options={
                'verbose_name': 'Github Dependency Finding',
                'verbose_name_plural': 'Github Dependency Findings',
            },
            bases=('inventory.finding',),
        ),
        migrations.CreateModel(
            name='CodeFinding',
            fields=[
                ('finding_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.finding')),
                ('number', models.IntegerField(editable=False)),
                ('url', models.URLField(blank=True, editable=False, null=True)),
                ('dismissed_reason', models.TextField(blank=True, editable=False, null=True)),
                ('dismissed_comment', models.TextField(blank=True, editable=False, null=True)),
                ('repository', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='inventory.gitrepository')),
            ],
            options={
                'verbose_name': 'Github Code Finding',
                'verbose_name_plural': 'Github Code Findings',
            },
            bases=('inventory.finding',),
        ),
    ]
